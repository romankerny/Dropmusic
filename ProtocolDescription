type | register; flag | (s/r); username | name; password | pw; result (y/n)
neste caso queremos receber p aceitar
type | register; flag | r; username | name; password | pw; result y



(1) Register & Login & logout
    Request  -> flag | s; type | register; email | eeee; password | pppp;
    Response -> flag | r; type | register; result | (y/n); email | eeee; password | pppp; msg | mmmmmm;

    Request  -> flag | s; type | login; email | eeee; password | pppp;
    Response -> flag | r; type | login; result | (y/n); email | eeee; password | pppp; notification_count | n; notif_x | notif; msg | mmmmmm;
    Request  -> flag | s; type | logout; email | eeee;
    Response -> flag | r; type | logout; result | (y/n); email | eeee;


Pesquisa p/ nome do artista, o género musical ou o título do álbum (2)
    Request  -> flag | s; type | search; param | (art, gen, tit); keyword | kkkk;
    Response -> flag | r; type | search; result | (y/n); param | (art, gen, tit); keyword | kkkk; item_count | n; iten_x_name | name; [...]

Resposta aos clientes c/ notify de alteração em música
    Request  -> flag | s; type | notify; message | mmmmmmm; user_count | n; user_x_email | email; [...]
    Response -> flag | r; type | notify; message | mmmmmmm; user_count | n; user_x_email | email; [...]


(4) Consultar detalhes sobre álbum e artista
    Request  -> flag | s; type | details; param | (art, alb); keyword | kkkk;
    Response -> flag | r; type | details; param | (art, alb); keyword | kkkk; result | (y/n); response | blablablabla;

(5) Escrever uma crítica a um álbum
    Request  -> flag | s; type | critic; album | name; critic | blabla; rate | n; email | eeee;
    Response -> flag | r; type | critic; result | (y/n); album | name; critic | blabla; rate | n; email | eeee;

(6) Dar previlégios de editor a um utilizador
    Request  -> flag | s; type | privilege; user1 | username; user2 | username;
    Response -> flag | r; type | privilege; result | (y/n): user1 | username; user2 | username; msg | mmmmmmmm;

(7) Adicionar / alterar detalhes
    * P/ enquanto ainda só funciona c/ o param details de Album e Artist
    Request  -> flag | s; type | detail; gen | (art, album); keyword | vvvvv; detail | ddddddddddddddddddd; email | eeee;
    Response -> flag | r; type | detail; gen | (art, album); keyword | vvvvv; response | (y/n); email | eeee;



(10) (12) [TCP Upload e download]

    [Upload]
    Request  -> flag | s; type | requestTCPConnection; operation | download; title | tttt; uploader | uuuu; email | eeee
    Response -> flag | r; type | requestTCPConnection; operation | upload; email | eeee; result | y; port | pppp;

    [Download]
    Request from RMIClient -> flag | s; type | requestTCPConnection; operation | download; email | eeee;
    Response               -> flag | r; type | requestTCPConnection; operation | download; email | eeee; result | y; port | pppp;

(11) Partilhar musica
    Request  -> flag | s; type | share; title | tttt; shareTo | sssss; uploader | uuuuuu;
    Response -> flag | r; type | share; result | (y/n): title | ttttt; shareTo | ssssss; uploader | uuuuuu;


[Comunicação Multicast-RMIServer]

- Servidor qd se ligar manda ack
    Response -> flag | r; type | ack; hash | hhhh;

- RMI quando se liga pede ACK
    Request  -> flag | s; type | connectionrequest;


Adicionar música artista ou album

    Artista:
        Request  -> flag | s; type | addart; name | nnnn; details | dddd; email | dddd;
        Response -> flag | r; type | addart; email | dddd; result | (y/n);

    Album:
        Request  -> flag | s; type | addalb; art | aaaa; alb | bbbb; description | dddd; genre | gggg; email | dddd;
        Response -> flag | r; type | addalb; email | ddd; result |(y/n);

    Música;
        Request  -> flag | s; type | addmusic; alb | bbbb; title | tttt; track | n; email | dddd;
        Response -> flag | r; type | addmusic; title | tttt; email | dddd; result | (y/n);


Editar detalhe de um album
        Request  -> flag | s; type | changedetail; album | aaaa; email | eeee;
        Response -> flag | r; type | changedetail; album | aaaa; email | eeee; result | (y/n);

Ver se música existe:
        Request  -> flag | id; type | search; music | musicTitle;
        Response -> flag | id; type | search; result | (y/n); msg | mmmmm;


/*
            User admin = new User("admin", "admin");
            admin.becomeEditor();
            admin.notifications.add("You've been promoted to Editor");
            users.add(admin);

            User diogo = new User("diogo", "diogo");
            User roman = new User("roman", "roman");

            users.add(admin);
            users.add(diogo);
            users.add(roman);

            Artist tool = new Artist("Tool", "Tool is an American rock band from Los Angeles, California.\n"+
                    "Formed in 1990, the group's line-up includes drummer Danny Carey, guitarist Adam Jones,\n" +
                    "and vocalist Maynard James Keenan. Justin Chancellor has been the band's bassist since 1995,\n" +
                    "replacing their original bassist Paul D'Amour. Tool has won three Grammy Awards,\n" +
                    "performed worldwide tours, and produced albums topping the charts in several countries");
            Album lateralus = new Album("Lateralus", "Released in 2001", "Progressive Metal");
            lateralus.tracks.add(new Music(1, "The Grudge"));
            lateralus.tracks.add(new Music(2, "Eon Blue Apocalypse"));
            lateralus.tracks.add(new Music(3, "The Patient"));
            lateralus.tracks.add(new Music(4, "Mantra"));
            lateralus.tracks.add(new Music(5, "Schism"));
            lateralus.tracks.add(new Music(6, "Parabol"));
            lateralus.tracks.add(new Music(7, "Parabola"));
            lateralus.tracks.add(new Music(8, "Ticks & Leeches"));
            lateralus.tracks.add(new Music(9, "Lateralus"));
            lateralus.tracks.add(new Music(10, "Disposition"));
            lateralus.tracks.add(new Music(11, "Reflection"));
            lateralus.tracks.add(new Music(12, "Triad"));
            lateralus.tracks.add(new Music(13, "Faaip de Oiad"));
            tool.albums.add(lateralus);

            Album tenKdays = new Album("10,000 Days", "Released in 2006", "Progressive Metal");
            tenKdays.tracks.add(new Music(1, "Vicarious"));
            tenKdays.tracks.add(new Music(2, "Jambi"));
            tenKdays.tracks.add(new Music(3, "Wings for Marie (Pt. 1)"));
            tenKdays.tracks.add(new Music(4, "10,000 Days (Wings Pt. 2)"));
            tenKdays.tracks.add(new Music(5, "The Pot"));
            tenKdays.tracks.add(new Music(6, "Lipan Conjuring"));
            tenKdays.tracks.add(new Music(7, "Lost Keys (Blame Hoffmann)"));
            tenKdays.tracks.add(new Music(8, "Rosetta Stoned"));
            tenKdays.tracks.add(new Music(9, "Intension"));
            tenKdays.tracks.add(new Music(10, "Right in Two"));
            tenKdays.tracks.add(new Music(11, "Viginti Tres"));
            tool.albums.add(tenKdays);
            this.artists.add(tool);

            Artist kendrick = new Artist("Kendrick Lamar", "Kendrick Lamar Duckworth (born June 17, 1987)\n" +
                    "is an American rapper, songwriter, and record producer. Raised in Compton, California,\n" +
                    "Lamar embarked on his musical career as a teenager under the stage name K-Dot,\n" +
                    "releasing a mixtape that garnered local attention and led to his signing with indie record label T\n" +
                    "op Dawg Entertainment (TDE).");
            Album butterfly = new Album("To Pimp a Butterfly", "Released in 2015", "Hip-hop");
            butterfly.tracks.add(new Music(1, "Wesley's Theory"));
            butterfly.tracks.add(new Music(2, "For Free? (Interlude)"));
            butterfly.tracks.add(new Music(3, "King Kunta"));
            butterfly.tracks.add(new Music(4, "Institutionalized"));
            butterfly.tracks.add(new Music(5, "These Walls"));
            butterfly.tracks.add(new Music(6, "u"));
            butterfly.tracks.add(new Music(7, "Alright"));
            butterfly.tracks.add(new Music(8, "For Sale? (Interlude)"));
            butterfly.tracks.add(new Music(9, "Momma"));
            butterfly.tracks.add(new Music(10, "Hood Politics"));
            butterfly.tracks.add(new Music(11, "How Much a Dollar Cost"));
            butterfly.tracks.add(new Music(12, "Complexion"));
            butterfly.tracks.add(new Music(13, "The Blacker the Berry"));
            butterfly.tracks.add(new Music(14, "You Aint Gotta Lie (Momma Said)"));
            butterfly.tracks.add(new Music(15, "i"));
            butterfly.tracks.add(new Music(16, "Mortal Man"));
            kendrick.albums.add(butterfly);
            this.artists.add(kendrick);

            writeArtistsToDisk(artists);
            writeUsersToDisk(users);
            */
